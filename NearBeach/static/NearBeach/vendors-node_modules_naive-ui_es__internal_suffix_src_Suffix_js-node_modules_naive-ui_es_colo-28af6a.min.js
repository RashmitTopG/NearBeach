"use strict";
(self["webpackChunknearbeach"] = self["webpackChunknearbeach"] || []).push([["vendors-node_modules_naive-ui_es__internal_suffix_src_Suffix_js-node_modules_naive-ui_es_colo-28af6a"],{

/***/ "./node_modules/naive-ui/es/_internal/clear/src/Clear.js":
/*!***************************************************************!*\
  !*** ./node_modules/naive-ui/es/_internal/clear/src/Clear.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../_utils */ "./node_modules/naive-ui/es/_utils/vue/resolve-slot.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_mixins */ "./node_modules/naive-ui/es/_mixins/use-style.js");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../icons */ "./node_modules/naive-ui/es/_internal/icons/Clear.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../icon */ "./node_modules/naive-ui/es/_internal/icon/src/Icon.js");
/* harmony import */ var _icon_switch_transition__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icon-switch-transition */ "./node_modules/naive-ui/es/_internal/icon-switch-transition/src/IconSwitchTransition.js");
/* harmony import */ var _styles_index_cssr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styles/index.cssr */ "./node_modules/naive-ui/es/_internal/clear/src/styles/index.cssr.js");







/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'BaseClear',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        show: Boolean,
        onClear: Function
    },
    setup(props) {
        (0,_mixins__WEBPACK_IMPORTED_MODULE_1__["default"])('-base-clear', _styles_index_cssr__WEBPACK_IMPORTED_MODULE_2__["default"], (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRef)(props, 'clsPrefix'));
        return {
            handleMouseDown(e) {
                e.preventDefault();
            }
        };
    },
    render() {
        const { clsPrefix } = this;
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-base-clear` },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_icon_switch_transition__WEBPACK_IMPORTED_MODULE_3__["default"], null, {
                default: () => {
                    var _a, _b;
                    return this.show ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { key: "dismiss", class: `${clsPrefix}-base-clear__clear`, onClick: this.onClear, onMousedown: this.handleMouseDown, "data-clear": true }, (0,_utils__WEBPACK_IMPORTED_MODULE_4__.resolveSlot)(this.$slots.icon, () => [
                        (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_icon__WEBPACK_IMPORTED_MODULE_5__["default"], { clsPrefix: clsPrefix }, {
                            default: () => (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_icons__WEBPACK_IMPORTED_MODULE_6__["default"], null)
                        })
                    ]))) : ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { key: "icon", class: `${clsPrefix}-base-clear__placeholder` }, (_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a)));
                }
            })));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/_internal/clear/src/styles/index.cssr.js":
/*!***************************************************************************!*\
  !*** ./node_modules/naive-ui/es/_internal/clear/src/styles/index.cssr.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_cssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../_utils/cssr */ "./node_modules/naive-ui/es/_utils/cssr/index.js");
/* harmony import */ var _styles_transitions_icon_switch_cssr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../_styles/transitions/icon-switch.cssr */ "./node_modules/naive-ui/es/_styles/transitions/icon-switch.cssr.js");


// vars:
// --n-bezier
// --n-clear-color
// --n-clear-size
// --n-clear-color-hover
// --n-clear-color-pressed
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('base-clear', `
 flex-shrink: 0;
 height: 1em;
 width: 1em;
 position: relative;
`, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('>', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('clear', `
 font-size: var(--n-clear-size);
 height: 1em;
 width: 1em;
 cursor: pointer;
 color: var(--n-clear-color);
 transition: color .3s var(--n-bezier);
 display: flex;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:hover', `
 color: var(--n-clear-color-hover)!important;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:active', `
 color: var(--n-clear-color-pressed)!important;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('placeholder', `
 display: flex;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('clear, placeholder', `
 position: absolute;
 left: 50%;
 top: 50%;
 transform: translateX(-50%) translateY(-50%);
 `, [(0,_styles_transitions_icon_switch_cssr__WEBPACK_IMPORTED_MODULE_1__.iconSwitchTransition)({
  originalTransform: 'translateX(-50%) translateY(-50%)',
  left: '50%',
  top: '50%'
})])])]));

/***/ }),

/***/ "./node_modules/naive-ui/es/_internal/icons/ChevronDown.js":
/*!*****************************************************************!*\
  !*** ./node_modules/naive-ui/es/_internal/icons/ChevronDown.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'ChevronDown',
    render() {
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M3.14645 5.64645C3.34171 5.45118 3.65829 5.45118 3.85355 5.64645L8 9.79289L12.1464 5.64645C12.3417 5.45118 12.6583 5.45118 12.8536 5.64645C13.0488 5.84171 13.0488 6.15829 12.8536 6.35355L8.35355 10.8536C8.15829 11.0488 7.84171 11.0488 7.64645 10.8536L3.14645 6.35355C2.95118 6.15829 2.95118 5.84171 3.14645 5.64645Z", fill: "currentColor" })));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/_internal/icons/Clear.js":
/*!***********************************************************!*\
  !*** ./node_modules/naive-ui/es/_internal/icons/Clear.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var _replaceable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./replaceable */ "./node_modules/naive-ui/es/_internal/icons/replaceable.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_replaceable__WEBPACK_IMPORTED_MODULE_1__.replaceable)('clear', (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { viewBox: "0 0 16 16", version: "1.1", xmlns: "http://www.w3.org/2000/svg" },
    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("g", { stroke: "none", "stroke-width": "1", fill: "none", "fill-rule": "evenodd" },
        (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("g", { fill: "currentColor", "fill-rule": "nonzero" },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M8,2 C11.3137085,2 14,4.6862915 14,8 C14,11.3137085 11.3137085,14 8,14 C4.6862915,14 2,11.3137085 2,8 C2,4.6862915 4.6862915,2 8,2 Z M6.5343055,5.83859116 C6.33943736,5.70359511 6.07001296,5.72288026 5.89644661,5.89644661 L5.89644661,5.89644661 L5.83859116,5.9656945 C5.70359511,6.16056264 5.72288026,6.42998704 5.89644661,6.60355339 L5.89644661,6.60355339 L7.293,8 L5.89644661,9.39644661 L5.83859116,9.4656945 C5.70359511,9.66056264 5.72288026,9.92998704 5.89644661,10.1035534 L5.89644661,10.1035534 L5.9656945,10.1614088 C6.16056264,10.2964049 6.42998704,10.2771197 6.60355339,10.1035534 L6.60355339,10.1035534 L8,8.707 L9.39644661,10.1035534 L9.4656945,10.1614088 C9.66056264,10.2964049 9.92998704,10.2771197 10.1035534,10.1035534 L10.1035534,10.1035534 L10.1614088,10.0343055 C10.2964049,9.83943736 10.2771197,9.57001296 10.1035534,9.39644661 L10.1035534,9.39644661 L8.707,8 L10.1035534,6.60355339 L10.1614088,6.5343055 C10.2964049,6.33943736 10.2771197,6.07001296 10.1035534,5.89644661 L10.1035534,5.89644661 L10.0343055,5.83859116 C9.83943736,5.70359511 9.57001296,5.72288026 9.39644661,5.89644661 L9.39644661,5.89644661 L8,7.293 L6.60355339,5.89644661 Z" }))))));


/***/ }),

/***/ "./node_modules/naive-ui/es/_internal/suffix/src/Suffix.js":
/*!*****************************************************************!*\
  !*** ./node_modules/naive-ui/es/_internal/suffix/src/Suffix.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var _clear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../clear */ "./node_modules/naive-ui/es/_internal/clear/src/Clear.js");
/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../loading */ "./node_modules/naive-ui/es/_internal/loading/src/Loading.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icon */ "./node_modules/naive-ui/es/_internal/icon/src/Icon.js");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../icons */ "./node_modules/naive-ui/es/_internal/icons/ChevronDown.js");
/* harmony import */ var _utils_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../_utils/vue */ "./node_modules/naive-ui/es/_utils/vue/resolve-slot.js");






/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'InternalSelectionSuffix',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        showArrow: {
            type: Boolean,
            default: undefined
        },
        showClear: {
            type: Boolean,
            default: undefined
        },
        loading: {
            type: Boolean,
            default: false
        },
        onClear: Function
    },
    setup(props, { slots }) {
        return () => {
            const { clsPrefix } = props;
            return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_loading__WEBPACK_IMPORTED_MODULE_1__["default"], { clsPrefix: clsPrefix, class: `${clsPrefix}-base-suffix`, strokeWidth: 24, scale: 0.85, show: props.loading }, {
                default: () => props.showArrow ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_clear__WEBPACK_IMPORTED_MODULE_2__["default"], { clsPrefix: clsPrefix, show: props.showClear, onClear: props.onClear }, {
                    placeholder: () => ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_icon__WEBPACK_IMPORTED_MODULE_3__["default"], { clsPrefix: clsPrefix, class: `${clsPrefix}-base-suffix__arrow` }, {
                        default: () => (0,_utils_vue__WEBPACK_IMPORTED_MODULE_4__.resolveSlot)(slots.default, () => [
                            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_icons__WEBPACK_IMPORTED_MODULE_5__["default"], null)
                        ])
                    }))
                })) : null
            }));
        };
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/AlphaSlider.js":
/*!******************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/AlphaSlider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var evtd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! evtd */ "./node_modules/evtd/es/delegate.js");
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./node_modules/naive-ui/es/color-picker/src/utils.js");




const HANDLE_SIZE = '12px';
const HANDLE_SIZE_NUM = 12;
const RADIUS = '6px';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'AlphaSlider',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        rgba: {
            type: Array,
            default: null
        },
        alpha: {
            type: Number,
            default: 0
        },
        onUpdateAlpha: {
            type: Function,
            required: true
        },
        onComplete: Function
    },
    setup(props) {
        const railRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);
        function handleMouseDown(e) {
            if (!railRef.value || !props.rgba)
                return;
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.on)('mousemove', document, handleMouseMove);
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.on)('mouseup', document, handleMouseUp);
            handleMouseMove(e);
        }
        function handleMouseMove(e) {
            const { value: railEl } = railRef;
            if (!railEl)
                return;
            const { width, left } = railEl.getBoundingClientRect();
            const newAlpha = (e.clientX - left) / (width - HANDLE_SIZE_NUM);
            props.onUpdateAlpha((0,_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeAlpha)(newAlpha));
        }
        function handleMouseUp() {
            var _a;
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.off)('mousemove', document, handleMouseMove);
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.off)('mouseup', document, handleMouseUp);
            (_a = props.onComplete) === null || _a === void 0 ? void 0 : _a.call(props);
        }
        return {
            railRef,
            railBackgroundImage: (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
                const { rgba } = props;
                if (!rgba)
                    return '';
                return `linear-gradient(to right, rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, 0) 0%, rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, 1) 100%)`;
            }),
            handleMouseDown
        };
    },
    render() {
        const { clsPrefix } = this;
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-slider`, ref: "railRef", style: {
                height: HANDLE_SIZE,
                borderRadius: RADIUS
            }, onMousedown: this.handleMouseDown },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { style: {
                    borderRadius: RADIUS,
                    position: 'absolute',
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0,
                    overflow: 'hidden'
                } },
                (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-checkboard` }),
                (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-slider__image`, style: {
                        backgroundImage: this.railBackgroundImage
                    } })),
            this.rgba && ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { style: {
                    position: 'absolute',
                    left: RADIUS,
                    right: RADIUS,
                    top: 0,
                    bottom: 0
                } },
                (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-handle`, style: {
                        left: `calc(${this.alpha * 100}% - ${RADIUS})`,
                        borderRadius: RADIUS,
                        width: HANDLE_SIZE,
                        height: HANDLE_SIZE
                    } },
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-handle__fill`, style: {
                            backgroundColor: (0,seemly__WEBPACK_IMPORTED_MODULE_3__.toRgbaString)(this.rgba),
                            borderRadius: RADIUS,
                            width: HANDLE_SIZE,
                            height: HANDLE_SIZE
                        } }))))));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/ColorInput.js":
/*!*****************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/ColorInput.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/index.js");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../input */ "./node_modules/naive-ui/es/input/src/InputGroup.js");
/* harmony import */ var _ColorInputUnit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ColorInputUnit */ "./node_modules/naive-ui/es/color-picker/src/ColorInputUnit.js");




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'ColorInput',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        mode: {
            type: String,
            required: true
        },
        modes: {
            type: Array,
            required: true
        },
        showAlpha: {
            type: Boolean,
            required: true
        },
        value: {
            // for hex to get percise value
            type: String,
            default: null
        },
        valueArr: {
            type: Array,
            default: null
        },
        onUpdateValue: {
            type: Function,
            required: true
        },
        onUpdateMode: {
            type: Function,
            required: true
        }
    },
    setup(props) {
        return {
            handleUnitUpdateValue(index, value) {
                const { showAlpha } = props;
                if (props.mode === 'hex') {
                    props.onUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_1__.toHexaString : seemly__WEBPACK_IMPORTED_MODULE_1__.toHexString)(value));
                    return;
                }
                let nextValueArr;
                if (props.valueArr === null) {
                    nextValueArr = [0, 0, 0, 0];
                }
                else {
                    nextValueArr = Array.from(props.valueArr);
                }
                switch (props.mode) {
                    case 'hsv':
                        nextValueArr[index] = value;
                        props.onUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_1__.toHsvaString : seemly__WEBPACK_IMPORTED_MODULE_1__.toHsvString)(nextValueArr));
                        break;
                    case 'rgb':
                        nextValueArr[index] = value;
                        props.onUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_1__.toRgbaString : seemly__WEBPACK_IMPORTED_MODULE_1__.toRgbString)(nextValueArr));
                        break;
                    case 'hsl':
                        nextValueArr[index] = value;
                        props.onUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_1__.toHslaString : seemly__WEBPACK_IMPORTED_MODULE_1__.toHslString)(nextValueArr));
                        break;
                }
            }
        };
    },
    render() {
        const { clsPrefix, modes } = this;
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-input` },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-input__mode`, onClick: this.onUpdateMode, style: {
                    cursor: modes.length === 1 ? '' : 'pointer'
                } }, this.mode.toUpperCase() + (this.showAlpha ? 'A' : '')),
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_input__WEBPACK_IMPORTED_MODULE_2__["default"], null, {
                default: () => {
                    const { mode, valueArr, showAlpha } = this;
                    if (mode === 'hex') {
                        // hex and rgba shares the same value arr
                        let hexValue = null;
                        try {
                            hexValue =
                                valueArr === null
                                    ? null
                                    : (showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_1__.toHexaString : seemly__WEBPACK_IMPORTED_MODULE_1__.toHexString)(valueArr);
                        }
                        catch (_a) { }
                        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_ColorInputUnit__WEBPACK_IMPORTED_MODULE_3__["default"], { label: 'HEX', showAlpha: showAlpha, value: hexValue, onUpdateValue: (unitValue) => {
                                this.handleUnitUpdateValue(0, unitValue);
                            } }));
                    }
                    return (mode + (showAlpha ? 'a' : '')).split('').map((v, i) => ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_ColorInputUnit__WEBPACK_IMPORTED_MODULE_3__["default"], { label: v.toUpperCase(), value: valueArr === null ? null : valueArr[i], onUpdateValue: (unitValue) => {
                            this.handleUnitUpdateValue(i, unitValue);
                        } })));
                }
            })));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/ColorInputUnit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/ColorInputUnit.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../input */ "./node_modules/naive-ui/es/input/src/Input.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context */ "./node_modules/naive-ui/es/color-picker/src/context.js");



// 0 - 255
function normalizeRgbUnit(value) {
    if (/^\d{1,3}\.?\d*$/.test(value.trim())) {
        return Math.max(0, Math.min(parseInt(value), 255));
    }
    return false;
}
// 0 - 360
function normalizeHueUnit(value) {
    if (/^\d{1,3}\.?\d*$/.test(value.trim())) {
        return Math.max(0, Math.min(parseInt(value), 360));
    }
    return false;
}
// 0 - 100
function normalizeSlvUnit(value) {
    if (/^\d{1,3}\.?\d*$/.test(value.trim())) {
        return Math.max(0, Math.min(parseInt(value), 100));
    }
    return false;
}
function normalizeHexaUnit(value) {
    const trimmedValue = value.trim();
    if (/^#[0-9a-fA-F]+$/.test(trimmedValue)) {
        return [4, 5, 7, 9].includes(trimmedValue.length);
    }
    return false;
}
// 0 - 100%
function normalizeAlphaUnit(value) {
    if (/^\d{1,3}\.?\d*%$/.test(value.trim())) {
        return Math.max(0, Math.min(parseInt(value) / 100, 100));
    }
    return false;
}
const inputThemeOverrides = {
    paddingSmall: '0 4px'
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'ColorInputUnit',
    props: {
        label: {
            type: String,
            required: true
        },
        value: {
            type: [Number, String],
            default: null
        },
        showAlpha: Boolean,
        onUpdateValue: {
            type: Function,
            required: true
        }
    },
    setup(props) {
        const inputValueRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)('');
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const { themeRef } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.inject)(_context__WEBPACK_IMPORTED_MODULE_1__.colorPickerInjectionKey, null);
        (0,vue__WEBPACK_IMPORTED_MODULE_0__.watchEffect)(() => {
            inputValueRef.value = getInputString();
        });
        function getInputString() {
            const { value } = props;
            if (value === null)
                return '';
            const { label } = props;
            if (label === 'HEX') {
                return value;
            }
            if (label === 'A') {
                return `${Math.floor(value * 100)}%`;
            }
            return String(Math.floor(value));
        }
        function handleInputUpdateValue(value) {
            inputValueRef.value = value;
        }
        function handleInputChange(value) {
            let unit;
            let valid;
            switch (props.label) {
                case 'HEX':
                    valid = normalizeHexaUnit(value);
                    if (valid) {
                        props.onUpdateValue(value);
                    }
                    inputValueRef.value = getInputString(); // to normalized new value
                    break;
                case 'H':
                    unit = normalizeHueUnit(value);
                    if (unit === false) {
                        inputValueRef.value = getInputString();
                    }
                    else {
                        props.onUpdateValue(unit);
                    }
                    break;
                case 'S':
                case 'L':
                case 'V':
                    unit = normalizeSlvUnit(value);
                    if (unit === false) {
                        inputValueRef.value = getInputString();
                    }
                    else {
                        props.onUpdateValue(unit);
                    }
                    break;
                case 'A':
                    unit = normalizeAlphaUnit(value);
                    if (unit === false) {
                        inputValueRef.value = getInputString();
                    }
                    else {
                        props.onUpdateValue(unit);
                    }
                    break;
                case 'R':
                case 'G':
                case 'B':
                    unit = normalizeRgbUnit(value);
                    if (unit === false) {
                        inputValueRef.value = getInputString();
                    }
                    else {
                        props.onUpdateValue(unit);
                    }
                    break;
            }
        }
        return {
            mergedTheme: themeRef,
            inputValue: inputValueRef,
            handleInputChange,
            handleInputUpdateValue
        };
    },
    render() {
        const { mergedTheme } = this;
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_input__WEBPACK_IMPORTED_MODULE_2__["default"], { size: "small", placeholder: this.label, theme: mergedTheme.peers.Input, themeOverrides: mergedTheme.peerOverrides.Input, builtinThemeOverrides: inputThemeOverrides, value: this.inputValue, onUpdateValue: this.handleInputUpdateValue, onChange: this.handleInputChange, 
            // add more space for xxx% input
            style: this.label === 'A' ? 'flex-grow: 1.25;' : '' }));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/ColorPicker.js":
/*!******************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/ColorPicker.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   colorPickerProps: () => (/* binding */ colorPickerProps),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/index.js");
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/convert.js");
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/dom/get-precise-event-target.js");
/* harmony import */ var vooks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vooks */ "./node_modules/vooks/es/use-merged-state.js");
/* harmony import */ var vooks__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! vooks */ "./node_modules/vooks/es/life-cycle/use-is-mounted.js");
/* harmony import */ var vueuc__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! vueuc */ "./node_modules/vueuc/es/binder/src/Binder.js");
/* harmony import */ var vueuc__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! vueuc */ "./node_modules/vueuc/es/binder/src/Target.js");
/* harmony import */ var vueuc__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! vueuc */ "./node_modules/vueuc/es/binder/src/Follower.js");
/* harmony import */ var vdirs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! vdirs */ "./node_modules/vdirs/es/clickoutside.js");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../styles */ "./node_modules/naive-ui/es/color-picker/styles/light.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../_mixins */ "./node_modules/naive-ui/es/_mixins/use-theme.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_mixins */ "./node_modules/naive-ui/es/_mixins/use-form-item.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_mixins */ "./node_modules/naive-ui/es/_mixins/use-locale.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../_mixins */ "./node_modules/naive-ui/es/_mixins/use-config.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../_mixins */ "./node_modules/naive-ui/es/_mixins/use-css-vars-class.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_utils */ "./node_modules/naive-ui/es/_utils/composable/use-adjusted-to.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../_utils */ "./node_modules/naive-ui/es/_utils/vue/call.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../_utils */ "./node_modules/naive-ui/es/_utils/cssr/create-key.js");
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../button */ "./node_modules/naive-ui/es/button/src/Button.js");
/* harmony import */ var _HueSlider__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./HueSlider */ "./node_modules/naive-ui/es/color-picker/src/HueSlider.js");
/* harmony import */ var _AlphaSlider__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./AlphaSlider */ "./node_modules/naive-ui/es/color-picker/src/AlphaSlider.js");
/* harmony import */ var _Pallete__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Pallete */ "./node_modules/naive-ui/es/color-picker/src/Pallete.js");
/* harmony import */ var _ColorInput__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ColorInput */ "./node_modules/naive-ui/es/color-picker/src/ColorInput.js");
/* harmony import */ var _ColorPickerTrigger__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./ColorPickerTrigger */ "./node_modules/naive-ui/es/color-picker/src/ColorPickerTrigger.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils */ "./node_modules/naive-ui/es/color-picker/src/utils.js");
/* harmony import */ var _ColorPickerSwatches__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./ColorPickerSwatches */ "./node_modules/naive-ui/es/color-picker/src/ColorPickerSwatches.js");
/* harmony import */ var _ColorPreview__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./ColorPreview */ "./node_modules/naive-ui/es/color-picker/src/ColorPreview.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context */ "./node_modules/naive-ui/es/color-picker/src/context.js");
/* harmony import */ var _styles_index_cssr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./styles/index.cssr */ "./node_modules/naive-ui/es/color-picker/src/styles/index.cssr.js");



















const colorPickerProps = Object.assign(Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_1__["default"].props), { value: String, show: {
        type: Boolean,
        default: undefined
    }, defaultShow: Boolean, defaultValue: String, modes: {
        type: Array,
        // no hsva by default since browser doesn't support it
        default: () => ['rgb', 'hex', 'hsl']
    }, placement: {
        type: String,
        default: 'bottom-start'
    }, to: _utils__WEBPACK_IMPORTED_MODULE_2__.useAdjustedTo.propTo, showAlpha: {
        type: Boolean,
        default: true
    }, showPreview: Boolean, swatches: Array, disabled: {
        type: Boolean,
        default: undefined
    }, actions: {
        type: Array,
        default: null
    }, internalActions: Array, size: String, renderLabel: Function, onComplete: Function, onConfirm: Function, 'onUpdate:show': [Function, Array], onUpdateShow: [Function, Array], 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array] });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'ColorPicker',
    props: colorPickerProps,
    setup(props, { slots }) {
        const selfRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);
        let upcomingValue = null;
        const formItem = (0,_mixins__WEBPACK_IMPORTED_MODULE_3__["default"])(props);
        const { mergedSizeRef, mergedDisabledRef } = formItem;
        const { localeRef } = (0,_mixins__WEBPACK_IMPORTED_MODULE_4__["default"])('global');
        const { mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = (0,_mixins__WEBPACK_IMPORTED_MODULE_5__["default"])(props);
        const themeRef = (0,_mixins__WEBPACK_IMPORTED_MODULE_1__["default"])('ColorPicker', '-color-picker', _styles_index_cssr__WEBPACK_IMPORTED_MODULE_6__["default"], _styles__WEBPACK_IMPORTED_MODULE_7__["default"], props, mergedClsPrefixRef);
        (0,vue__WEBPACK_IMPORTED_MODULE_0__.provide)(_context__WEBPACK_IMPORTED_MODULE_8__.colorPickerInjectionKey, {
            themeRef,
            renderLabelRef: (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRef)(props, 'renderLabel'),
            colorPickerSlots: slots
        });
        const uncontrolledShowRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(props.defaultShow);
        const mergedShowRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])((0,vue__WEBPACK_IMPORTED_MODULE_0__.toRef)(props, 'show'), uncontrolledShowRef);
        function doUpdateShow(value) {
            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;
            if (onUpdateShow)
                (0,_utils__WEBPACK_IMPORTED_MODULE_10__.call)(onUpdateShow, value);
            if (_onUpdateShow)
                (0,_utils__WEBPACK_IMPORTED_MODULE_10__.call)(_onUpdateShow, value);
            uncontrolledShowRef.value = value;
        }
        const { defaultValue } = props;
        const uncontrolledValueRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(defaultValue === undefined
            ? (0,_utils__WEBPACK_IMPORTED_MODULE_11__.deriveDefaultValue)(props.modes, props.showAlpha)
            : defaultValue);
        const mergedValueRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])((0,vue__WEBPACK_IMPORTED_MODULE_0__.toRef)(props, 'value'), uncontrolledValueRef);
        const undoStackRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)([mergedValueRef.value]);
        const valueIndexRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(0);
        const valueModeRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => (0,_utils__WEBPACK_IMPORTED_MODULE_11__.getModeFromValue)(mergedValueRef.value));
        const { modes } = props;
        const displayedModeRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)((0,_utils__WEBPACK_IMPORTED_MODULE_11__.getModeFromValue)(mergedValueRef.value) || modes[0] || 'rgb');
        function handleUpdateDisplayedMode() {
            const { modes } = props;
            const { value: displayedMode } = displayedModeRef;
            const currentModeIndex = modes.findIndex((mode) => mode === displayedMode);
            if (~currentModeIndex) {
                displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];
            }
            else {
                displayedModeRef.value = 'rgb';
            }
        }
        let _h, // avoid conflict with render function's h
        s, l, v, r, g, b, a;
        const hsvaRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
            const { value: mergedValue } = mergedValueRef;
            if (!mergedValue)
                return null;
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            switch (valueModeRef.value) {
                case 'hsv':
                    return (0,seemly__WEBPACK_IMPORTED_MODULE_12__.hsva)(mergedValue);
                case 'hsl':
                    ;
                    [_h, s, l, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_12__.hsla)(mergedValue);
                    return [...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsl2hsv)(_h, s, l), a];
                case 'rgb':
                case 'hex':
                    ;
                    [r, g, b, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_12__.rgba)(mergedValue);
                    return [...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.rgb2hsv)(r, g, b), a];
            }
        });
        const rgbaRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
            const { value: mergedValue } = mergedValueRef;
            if (!mergedValue)
                return null;
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            switch (valueModeRef.value) {
                case 'rgb':
                case 'hex':
                    return (0,seemly__WEBPACK_IMPORTED_MODULE_12__.rgba)(mergedValue);
                case 'hsv':
                    ;
                    [_h, s, v, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_12__.hsva)(mergedValue);
                    return [...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsv2rgb)(_h, s, v), a];
                case 'hsl':
                    ;
                    [_h, s, l, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_12__.hsla)(mergedValue);
                    return [...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsl2rgb)(_h, s, l), a];
            }
        });
        const hslaRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
            const { value: mergedValue } = mergedValueRef;
            if (!mergedValue)
                return null;
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            switch (valueModeRef.value) {
                case 'hsl':
                    return (0,seemly__WEBPACK_IMPORTED_MODULE_12__.hsla)(mergedValue);
                case 'hsv':
                    ;
                    [_h, s, v, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_12__.hsva)(mergedValue);
                    return [...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsv2hsl)(_h, s, v), a];
                case 'rgb':
                case 'hex':
                    ;
                    [r, g, b, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_12__.rgba)(mergedValue);
                    return [...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.rgb2hsl)(r, g, b), a];
            }
        });
        const mergedValueArrRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
            switch (displayedModeRef.value) {
                case 'rgb':
                case 'hex':
                    return rgbaRef.value;
                case 'hsv':
                    return hsvaRef.value;
                case 'hsl':
                    return hslaRef.value;
            }
        });
        const displayedHueRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(0);
        const displayedAlphaRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(1);
        const displayedSvRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)([0, 0]);
        function handleUpdateSv(s, v) {
            const { value: hsvaArr } = hsvaRef;
            const hue = displayedHueRef.value;
            const alpha = hsvaArr ? hsvaArr[3] : 1;
            displayedSvRef.value = [s, v];
            const { showAlpha } = props;
            switch (displayedModeRef.value) {
                case 'hsv':
                    doUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_12__.toHsvaString : seemly__WEBPACK_IMPORTED_MODULE_12__.toHsvString)([hue, s, v, alpha]), 'cursor');
                    break;
                case 'hsl':
                    doUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_12__.toHslaString : seemly__WEBPACK_IMPORTED_MODULE_12__.toHslString)([
                        ...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsv2hsl)(hue, s, v),
                        alpha
                    ]), 'cursor');
                    break;
                case 'rgb':
                    doUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_12__.toRgbaString : seemly__WEBPACK_IMPORTED_MODULE_12__.toRgbString)([
                        ...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsv2rgb)(hue, s, v),
                        alpha
                    ]), 'cursor');
                    break;
                case 'hex':
                    doUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_12__.toHexaString : seemly__WEBPACK_IMPORTED_MODULE_12__.toHexString)([
                        ...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsv2rgb)(hue, s, v),
                        alpha
                    ]), 'cursor');
                    break;
            }
        }
        function handleUpdateHue(hue) {
            displayedHueRef.value = hue;
            const { value: hsvaArr } = hsvaRef;
            if (!hsvaArr) {
                return;
            }
            const [, s, v, a] = hsvaArr;
            const { showAlpha } = props;
            switch (displayedModeRef.value) {
                case 'hsv':
                    doUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_12__.toHsvaString : seemly__WEBPACK_IMPORTED_MODULE_12__.toHsvString)([hue, s, v, a]), 'cursor');
                    break;
                case 'rgb':
                    doUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_12__.toRgbaString : seemly__WEBPACK_IMPORTED_MODULE_12__.toRgbString)([
                        ...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsv2rgb)(hue, s, v),
                        a
                    ]), 'cursor');
                    break;
                case 'hex':
                    doUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_12__.toHexaString : seemly__WEBPACK_IMPORTED_MODULE_12__.toHexString)([
                        ...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsv2rgb)(hue, s, v),
                        a
                    ]), 'cursor');
                    break;
                case 'hsl':
                    doUpdateValue((showAlpha ? seemly__WEBPACK_IMPORTED_MODULE_12__.toHslaString : seemly__WEBPACK_IMPORTED_MODULE_12__.toHslString)([
                        ...(0,seemly__WEBPACK_IMPORTED_MODULE_13__.hsv2hsl)(hue, s, v),
                        a
                    ]), 'cursor');
                    break;
            }
        }
        function handleUpdateAlpha(alpha) {
            switch (displayedModeRef.value) {
                case 'hsv':
                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                    ;
                    [_h, s, v] = hsvaRef.value;
                    doUpdateValue((0,seemly__WEBPACK_IMPORTED_MODULE_12__.toHsvaString)([_h, s, v, alpha]), 'cursor');
                    break;
                case 'rgb':
                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                    ;
                    [r, g, b] = rgbaRef.value;
                    doUpdateValue((0,seemly__WEBPACK_IMPORTED_MODULE_12__.toRgbaString)([r, g, b, alpha]), 'cursor');
                    break;
                case 'hex':
                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                    ;
                    [r, g, b] = rgbaRef.value;
                    doUpdateValue((0,seemly__WEBPACK_IMPORTED_MODULE_12__.toHexaString)([r, g, b, alpha]), 'cursor');
                    break;
                case 'hsl':
                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                    ;
                    [_h, s, l] = hslaRef.value;
                    doUpdateValue((0,seemly__WEBPACK_IMPORTED_MODULE_12__.toHslaString)([_h, s, l, alpha]), 'cursor');
                    break;
            }
            displayedAlphaRef.value = alpha;
        }
        function doUpdateValue(value, updateSource) {
            if (updateSource === 'cursor') {
                upcomingValue = value;
            }
            else {
                upcomingValue = null;
            }
            const { nTriggerFormChange, nTriggerFormInput } = formItem;
            const { onUpdateValue, 'onUpdate:value': _onUpdateValue } = props;
            if (onUpdateValue)
                (0,_utils__WEBPACK_IMPORTED_MODULE_10__.call)(onUpdateValue, value);
            if (_onUpdateValue)
                (0,_utils__WEBPACK_IMPORTED_MODULE_10__.call)(_onUpdateValue, value);
            nTriggerFormChange();
            nTriggerFormInput();
            uncontrolledValueRef.value = value;
        }
        function handleInputUpdateValue(value) {
            doUpdateValue(value, 'input');
            void (0,vue__WEBPACK_IMPORTED_MODULE_0__.nextTick)(handleComplete);
        }
        function handleComplete(pushStack = true) {
            const { value } = mergedValueRef;
            // no value & only hue changes will complete with no value
            if (value) {
                const { nTriggerFormChange, nTriggerFormInput } = formItem;
                const { onComplete } = props;
                if (onComplete) {
                    ;
                    onComplete(value);
                }
                const { value: undoStack } = undoStackRef;
                const { value: valueIndex } = valueIndexRef;
                if (pushStack) {
                    undoStack.splice(valueIndex + 1, undoStack.length, value);
                    valueIndexRef.value = valueIndex + 1;
                }
                nTriggerFormChange();
                nTriggerFormInput();
            }
        }
        function undo() {
            const { value: valueIndex } = valueIndexRef;
            if (valueIndex - 1 < 0)
                return;
            doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');
            handleComplete(false);
            valueIndexRef.value = valueIndex - 1;
        }
        function redo() {
            const { value: valueIndex } = valueIndexRef;
            if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length)
                return;
            doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');
            handleComplete(false);
            valueIndexRef.value = valueIndex + 1;
        }
        function handleClear() {
            doUpdateValue(null, 'input');
            doUpdateShow(false);
        }
        function handleConfirm() {
            const { value } = mergedValueRef;
            const { onConfirm } = props;
            if (onConfirm) {
                ;
                onConfirm(value);
            }
            doUpdateShow(false);
        }
        const undoableRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => valueIndexRef.value >= 1);
        const redoableRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
            const { value: undoStack } = undoStackRef;
            return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;
        });
        (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(mergedShowRef, (value) => {
            if (!value) {
                undoStackRef.value = [mergedValueRef.value];
                valueIndexRef.value = 0;
            }
        });
        (0,vue__WEBPACK_IMPORTED_MODULE_0__.watchEffect)(() => {
            if (upcomingValue && upcomingValue === mergedValueRef.value) {
                // let it works in uncontrolled mode
            }
            else {
                const { value } = hsvaRef;
                if (value) {
                    displayedHueRef.value = value[0];
                    displayedAlphaRef.value = value[3];
                    displayedSvRef.value = [value[1], value[2]];
                }
            }
            upcomingValue = null;
        });
        const cssVarsRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
            const { value: mergedSize } = mergedSizeRef;
            const { common: { cubicBezierEaseInOut }, self: { textColor, color, panelFontSize, boxShadow, border, borderRadius, dividerColor, [(0,_utils__WEBPACK_IMPORTED_MODULE_14__.createKey)('height', mergedSize)]: height, [(0,_utils__WEBPACK_IMPORTED_MODULE_14__.createKey)('fontSize', mergedSize)]: fontSize } } = themeRef.value;
            return {
                '--n-bezier': cubicBezierEaseInOut,
                '--n-text-color': textColor,
                '--n-color': color,
                '--n-panel-font-size': panelFontSize,
                '--n-font-size': fontSize,
                '--n-box-shadow': boxShadow,
                '--n-border': border,
                '--n-border-radius': borderRadius,
                '--n-height': height,
                '--n-divider-color': dividerColor
            };
        });
        const themeClassHandle = inlineThemeDisabled
            ? (0,_mixins__WEBPACK_IMPORTED_MODULE_15__.useThemeClass)('color-picker', (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
                return mergedSizeRef.value[0];
            }), cssVarsRef, props)
            : undefined;
        function renderPanel() {
            var _a;
            const { value: rgba } = rgbaRef;
            const { value: displayedHue } = displayedHueRef;
            const { internalActions, modes, actions } = props;
            const { value: mergedTheme } = themeRef;
            const { value: mergedClsPrefix } = mergedClsPrefixRef;
            return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: [
                    `${mergedClsPrefix}-color-picker-panel`,
                    themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value
                ], onDragstart: (e) => {
                    e.preventDefault();
                }, style: inlineThemeDisabled
                    ? undefined
                    : cssVarsRef.value },
                (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${mergedClsPrefix}-color-picker-control` },
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_Pallete__WEBPACK_IMPORTED_MODULE_16__["default"], { clsPrefix: mergedClsPrefix, rgba: rgba, displayedHue: displayedHue, displayedSv: displayedSvRef.value, onUpdateSV: handleUpdateSv, onComplete: handleComplete }),
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${mergedClsPrefix}-color-picker-preview` },
                        (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${mergedClsPrefix}-color-picker-preview__sliders` },
                            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_HueSlider__WEBPACK_IMPORTED_MODULE_17__["default"], { clsPrefix: mergedClsPrefix, hue: displayedHue, onUpdateHue: handleUpdateHue, onComplete: handleComplete }),
                            props.showAlpha ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_AlphaSlider__WEBPACK_IMPORTED_MODULE_18__["default"], { clsPrefix: mergedClsPrefix, rgba: rgba, alpha: displayedAlphaRef.value, onUpdateAlpha: handleUpdateAlpha, onComplete: handleComplete })) : null),
                        props.showPreview ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_ColorPreview__WEBPACK_IMPORTED_MODULE_19__["default"], { clsPrefix: mergedClsPrefix, mode: displayedModeRef.value, color: rgbaRef.value && (0,seemly__WEBPACK_IMPORTED_MODULE_12__.toHexString)(rgbaRef.value), onUpdateColor: (color) => { doUpdateValue(color, 'input'); } })) : null),
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_ColorInput__WEBPACK_IMPORTED_MODULE_20__["default"], { clsPrefix: mergedClsPrefix, showAlpha: props.showAlpha, mode: displayedModeRef.value, modes: modes, onUpdateMode: handleUpdateDisplayedMode, value: mergedValueRef.value, valueArr: mergedValueArrRef.value, onUpdateValue: handleInputUpdateValue }),
                    ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_ColorPickerSwatches__WEBPACK_IMPORTED_MODULE_21__["default"], { clsPrefix: mergedClsPrefix, mode: displayedModeRef.value, swatches: props.swatches, onUpdateColor: (color) => { doUpdateValue(color, 'input'); } }))),
                (actions === null || actions === void 0 ? void 0 : actions.length) ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${mergedClsPrefix}-color-picker-action` },
                    actions.includes('confirm') && ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_button__WEBPACK_IMPORTED_MODULE_22__["default"], { size: "small", onClick: handleConfirm, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.confirm })),
                    actions.includes('clear') && ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_button__WEBPACK_IMPORTED_MODULE_22__["default"], { size: "small", onClick: handleClear, disabled: !mergedValueRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.clear })))) : null,
                slots.action ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${mergedClsPrefix}-color-picker-action` }, { default: slots.action })) : internalActions ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${mergedClsPrefix}-color-picker-action` },
                    internalActions.includes('undo') && ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_button__WEBPACK_IMPORTED_MODULE_22__["default"], { size: "small", onClick: undo, disabled: !undoableRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.undo })),
                    internalActions.includes('redo') && ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_button__WEBPACK_IMPORTED_MODULE_22__["default"], { size: "small", onClick: redo, disabled: !redoableRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.redo })))) : null));
        }
        return {
            mergedClsPrefix: mergedClsPrefixRef,
            namespace: namespaceRef,
            selfRef,
            hsla: hslaRef,
            rgba: rgbaRef,
            mergedShow: mergedShowRef,
            mergedDisabled: mergedDisabledRef,
            isMounted: (0,vooks__WEBPACK_IMPORTED_MODULE_23__["default"])(),
            adjustedTo: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.useAdjustedTo)(props),
            mergedValue: mergedValueRef,
            handleTriggerClick() {
                doUpdateShow(true);
            },
            handleClickOutside(e) {
                var _a;
                if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains((0,seemly__WEBPACK_IMPORTED_MODULE_24__.getPreciseEventTarget)(e))) {
                    return;
                }
                doUpdateShow(false);
            },
            renderPanel,
            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,
            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,
            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender
        };
    },
    render() {
        const { $slots, mergedClsPrefix, onRender } = this;
        onRender === null || onRender === void 0 ? void 0 : onRender();
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: [this.themeClass, `${mergedClsPrefix}-color-picker`], ref: "selfRef", style: this.cssVars },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(vueuc__WEBPACK_IMPORTED_MODULE_25__["default"], null, {
                default: () => [
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(vueuc__WEBPACK_IMPORTED_MODULE_26__["default"], null, {
                        default: () => ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_ColorPickerTrigger__WEBPACK_IMPORTED_MODULE_27__["default"], { clsPrefix: mergedClsPrefix, value: this.mergedValue, hsla: this.hsla, disabled: this.mergedDisabled, onClick: this.handleTriggerClick }, {
                            label: $slots.label
                        }))
                    }),
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(vueuc__WEBPACK_IMPORTED_MODULE_28__["default"], { placement: this.placement, show: this.mergedShow, containerClass: this.namespace, teleportDisabled: this.adjustedTo === _utils__WEBPACK_IMPORTED_MODULE_2__.useAdjustedTo.tdkey, to: this.adjustedTo }, {
                        default: () => ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(vue__WEBPACK_IMPORTED_MODULE_0__.Transition, { name: "fade-in-scale-up-transition", appear: this.isMounted }, {
                            default: () => this.mergedShow
                                ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.withDirectives)(this.renderPanel(), [
                                    [
                                        vdirs__WEBPACK_IMPORTED_MODULE_29__["default"],
                                        this.handleClickOutside,
                                        undefined,
                                        { capture: true }
                                    ]
                                ])
                                : null
                        }))
                    })
                ]
            })));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/ColorPickerSwatches.js":
/*!**************************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/ColorPickerSwatches.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/index.js");
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/convert.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ "./node_modules/naive-ui/es/color-picker/src/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_utils */ "./node_modules/naive-ui/es/_utils/naive/warn.js");




// Try to normalize the color values to ensure that they are valid CSS colors
function normalizeColor(color, mode) {
    if (mode === 'hsv') {
        const [h, s, v, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.hsva)(color);
        return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toRgbaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.hsv2rgb)(h, s, v), a]);
    }
    // For the mode that is not in preset, we keep the original value.
    // For color names, they are legal to CSS, so we don’t deal with them,
    // and only standardize them when outputting.
    return color;
}
function getHexFromName(color) {
    const ctx = document
        .createElement('canvas')
        .getContext('2d');
    ctx.fillStyle = color;
    return ctx.fillStyle;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'ColorPickerSwatches',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        mode: {
            type: String,
            required: true
        },
        swatches: {
            type: Array,
            required: true
        },
        onUpdateColor: {
            type: Function,
            required: true
        }
    },
    setup(props) {
        const parsedSwatchesRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => props.swatches.map((value) => {
            const mode = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getModeFromValue)(value);
            return {
                value,
                mode,
                legalValue: normalizeColor(value, mode)
            };
        }));
        function normalizeOutput(parsed) {
            const { mode: modeProp } = props;
            let { value, mode: swatchColorMode } = parsed;
            // color name is converted to hex
            if (!swatchColorMode) {
                swatchColorMode = 'hex';
                if (/^[a-zA-Z]+$/.test(value)) {
                    value = getHexFromName(value);
                }
                else {
                    // for invalid color, we make it black
                    (0,_utils__WEBPACK_IMPORTED_MODULE_4__.warn)('color-picker', `color ${value} in swatches is invalid.`);
                    value = '#000000';
                }
            }
            if (swatchColorMode === modeProp)
                return value;
            // swatch value to current mode value
            return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.convertColor)(value, modeProp, swatchColorMode);
        }
        function handleSwatchSelect(parsed) {
            props.onUpdateColor(normalizeOutput(parsed));
        }
        function handleSwatchKeyDown(e, parsed) {
            if (e.key === 'Enter')
                handleSwatchSelect(parsed);
        }
        return {
            parsedSwatchesRef,
            handleSwatchSelect,
            handleSwatchKeyDown
        };
    },
    render() {
        const { clsPrefix } = this;
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-swatches` }, this.parsedSwatchesRef.map((swatch) => ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-swatch`, tabindex: 0, onClick: () => { this.handleSwatchSelect(swatch); }, onKeydown: (e) => { this.handleSwatchKeyDown(e, swatch); } },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-swatch__fill`, style: { background: swatch.legalValue } }))))));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/ColorPickerTrigger.js":
/*!*************************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/ColorPickerTrigger.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/index.js");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context */ "./node_modules/naive-ui/es/color-picker/src/context.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'ColorPickerTrigger',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        value: {
            type: String,
            default: null
        },
        hsla: {
            type: Array,
            default: null
        },
        disabled: Boolean,
        onClick: Function
    },
    setup(props) {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const { colorPickerSlots, renderLabelRef } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.inject)(_context__WEBPACK_IMPORTED_MODULE_1__.colorPickerInjectionKey, null);
        return () => {
            const { hsla, value, clsPrefix, onClick, disabled } = props;
            const renderLabel = colorPickerSlots.label || renderLabelRef.value;
            return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: [
                    `${clsPrefix}-color-picker-trigger`,
                    disabled && `${clsPrefix}-color-picker-trigger--disabled`
                ], onClick: disabled ? undefined : onClick },
                (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-trigger__fill` },
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-checkboard` }),
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { style: {
                            position: 'absolute',
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0,
                            backgroundColor: hsla ? (0,seemly__WEBPACK_IMPORTED_MODULE_2__.toHslaString)(hsla) : ''
                        } }),
                    value && hsla ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-trigger__value`, style: {
                            color: hsla[2] > 50 || hsla[3] < 0.5 ? 'black' : 'white'
                        } }, renderLabel ? renderLabel(value) : value)) : null)));
        };
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/ColorPreview.js":
/*!*******************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/ColorPreview.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/naive-ui/es/color-picker/src/utils.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'ColorPreview',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        mode: {
            type: String,
            required: true
        },
        color: {
            type: String,
            default: null,
            validator: (value) => {
                const mode = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getModeFromValue)(value);
                return Boolean(!value || (mode && mode !== 'hsv'));
            }
        },
        onUpdateColor: {
            type: Function,
            required: true
        }
    },
    setup(props) {
        function handleChange(e) {
            var _a;
            // hex
            const value = e.target.value;
            (_a = props.onUpdateColor) === null || _a === void 0 ? void 0 : _a.call(props, (0,_utils__WEBPACK_IMPORTED_MODULE_1__.convertColor)(value.toUpperCase(), props.mode, 'hex'));
            e.stopPropagation();
        }
        return {
            handleChange
        };
    },
    render() {
        const { clsPrefix } = this;
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-preview__preview` },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: `${clsPrefix}-color-picker-preview__fill`, style: {
                    background: this.color || '#000000'
                } }),
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("input", { class: `${clsPrefix}-color-picker-preview__input`, type: "color", value: this.color, onChange: this.handleChange })));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/HueSlider.js":
/*!****************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/HueSlider.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var evtd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! evtd */ "./node_modules/evtd/es/delegate.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./node_modules/naive-ui/es/color-picker/src/utils.js");



const HANDLE_SIZE = '12px';
const HANDLE_SIZE_NUM = 12;
const RADIUS = '6px';
const RADIUS_NUM = 6;
const GRADIENT = 'linear-gradient(90deg,red,#ff0 16.66%,#0f0 33.33%,#0ff 50%,#00f 66.66%,#f0f 83.33%,red)';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'HueSlider',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        hue: {
            type: Number,
            required: true
        },
        onUpdateHue: {
            type: Function,
            required: true
        },
        onComplete: Function
    },
    setup(props) {
        const railRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);
        function handleMouseDown(e) {
            if (!railRef.value)
                return;
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.on)('mousemove', document, handleMouseMove);
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.on)('mouseup', document, handleMouseUp);
            handleMouseMove(e);
        }
        function handleMouseMove(e) {
            const { value: railEl } = railRef;
            if (!railEl)
                return;
            const { width, left } = railEl.getBoundingClientRect();
            const newHue = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeHue)(((e.clientX - left - RADIUS_NUM) / (width - HANDLE_SIZE_NUM)) * 360);
            props.onUpdateHue(newHue);
        }
        function handleMouseUp() {
            var _a;
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.off)('mousemove', document, handleMouseMove);
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.off)('mouseup', document, handleMouseUp);
            (_a = props.onComplete) === null || _a === void 0 ? void 0 : _a.call(props);
        }
        return {
            railRef,
            handleMouseDown
        };
    },
    render() {
        const { clsPrefix } = this;
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-slider`, style: {
                height: HANDLE_SIZE,
                borderRadius: RADIUS
            } },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { ref: "railRef", style: {
                    boxShadow: 'inset 0 0 2px 0 rgba(0, 0, 0, .24)',
                    boxSizing: 'border-box',
                    backgroundImage: GRADIENT,
                    height: HANDLE_SIZE,
                    borderRadius: RADIUS,
                    position: 'relative'
                }, onMousedown: this.handleMouseDown },
                (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { style: {
                        position: 'absolute',
                        left: RADIUS,
                        right: RADIUS,
                        top: 0,
                        bottom: 0
                    } },
                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-handle`, style: {
                            left: `calc((${this.hue}%) / 359 * 100 - ${RADIUS})`,
                            borderRadius: RADIUS,
                            width: HANDLE_SIZE,
                            height: HANDLE_SIZE
                        } },
                        (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-handle__fill`, style: {
                                backgroundColor: `hsl(${this.hue}, 100%, 50%)`,
                                borderRadius: RADIUS,
                                width: HANDLE_SIZE,
                                height: HANDLE_SIZE
                            } }))))));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/Pallete.js":
/*!**************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/Pallete.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var evtd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! evtd */ "./node_modules/evtd/es/delegate.js");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");


const HANDLE_SIZE = '12px';
const RADIUS = '6px';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'Pallete',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        rgba: {
            type: Array,
            default: null
        },
        // 0 - 360
        displayedHue: {
            type: Number,
            required: true
        },
        displayedSv: {
            type: Array,
            required: true
        },
        onUpdateSV: {
            type: Function,
            required: true
        },
        onComplete: Function
    },
    setup(props) {
        const palleteRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);
        function handleMouseDown(e) {
            if (!palleteRef.value)
                return;
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.on)('mousemove', document, handleMouseMove);
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.on)('mouseup', document, handleMouseUp);
            handleMouseMove(e);
        }
        function handleMouseMove(e) {
            const { value: palleteEl } = palleteRef;
            if (!palleteEl)
                return;
            const { width, height, left, bottom } = palleteEl.getBoundingClientRect();
            const newV = (bottom - e.clientY) / height;
            const newS = (e.clientX - left) / width;
            const normalizedNewS = 100 * (newS > 1 ? 1 : newS < 0 ? 0 : newS);
            const normalizedNewV = 100 * (newV > 1 ? 1 : newV < 0 ? 0 : newV);
            props.onUpdateSV(normalizedNewS, normalizedNewV);
        }
        function handleMouseUp() {
            var _a;
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.off)('mousemove', document, handleMouseMove);
            (0,evtd__WEBPACK_IMPORTED_MODULE_1__.off)('mouseup', document, handleMouseUp);
            (_a = props.onComplete) === null || _a === void 0 ? void 0 : _a.call(props);
        }
        return {
            palleteRef,
            handleColor: (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
                const { rgba } = props;
                if (!rgba)
                    return '';
                return `rgb(${rgba[0]}, ${rgba[1]}, ${rgba[2]})`;
            }),
            handleMouseDown
        };
    },
    render() {
        const { clsPrefix } = this;
        return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-pallete`, onMousedown: this.handleMouseDown, ref: "palleteRef" },
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-pallete__layer`, style: {
                    backgroundImage: `linear-gradient(90deg, white, hsl(${this.displayedHue}, 100%, 50%))`
                } }),
            (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-pallete__layer ${clsPrefix}-color-picker-pallete__layer--shadowed`, style: {
                    backgroundImage: 'linear-gradient(180deg, rgba(0, 0, 0, 0%), rgba(0, 0, 0, 100%))'
                } }),
            this.rgba && ((0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-handle`, style: {
                    width: HANDLE_SIZE,
                    height: HANDLE_SIZE,
                    borderRadius: RADIUS,
                    left: `calc(${this.displayedSv[0]}% - ${RADIUS})`,
                    bottom: `calc(${this.displayedSv[1]}% - ${RADIUS})`
                } },
                (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${clsPrefix}-color-picker-handle__fill`, style: {
                        backgroundColor: this.handleColor,
                        borderRadius: RADIUS,
                        width: HANDLE_SIZE,
                        height: HANDLE_SIZE
                    } })))));
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/context.js":
/*!**************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/context.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   colorPickerInjectionKey: () => (/* binding */ colorPickerInjectionKey)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../_utils */ "./node_modules/naive-ui/es/_utils/vue/create-injection-key.js");

const colorPickerInjectionKey = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.createInjectionKey)('n-color-picker');


/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/styles/index.cssr.js":
/*!************************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/styles/index.cssr.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_cssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../_utils/cssr */ "./node_modules/naive-ui/es/_utils/cssr/index.js");
/* harmony import */ var _styles_transitions_fade_in_scale_up_cssr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_styles/transitions/fade-in-scale-up.cssr */ "./node_modules/naive-ui/es/_styles/transitions/fade-in-scale-up.cssr.js");


// vars:
// --n-color
// --n-text-color
// --n-border-radius
// --n-panel-font-size
// --n-font-size
// --n-bezier
// --n-height
// --n-box-shadow
// --n-divider-color
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)([(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker', `
 display: inline-block;
 box-sizing: border-box;
 height: var(--n-height);
 font-size: var(--n-font-size);
 width: 100%;
 position: relative;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-panel', `
 margin: 4px 0;
 width: 240px;
 font-size: var(--n-panel-font-size);
 color: var(--n-text-color);
 background-color: var(--n-color);
 transition:
 box-shadow .3s var(--n-bezier),
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier);
 border-radius: var(--n-border-radius);
 box-shadow: var(--n-box-shadow);
 `, [(0,_styles_transitions_fade_in_scale_up_cssr__WEBPACK_IMPORTED_MODULE_1__.fadeInScaleUpTransition)(), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('input', `
 text-align: center;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-checkboard', `
 background: white; 
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&::after', `
 background-image: linear-gradient(45deg, #DDD 25%, #0000 25%), linear-gradient(-45deg, #DDD 25%, #0000 25%), linear-gradient(45deg, #0000 75%, #DDD 75%), linear-gradient(-45deg, #0000 75%, #DDD 75%);
 background-size: 12px 12px;
 background-position: 0 0, 0 6px, 6px -6px, -6px 0px;
 background-repeat: repeat;
 content: "";
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-slider', `
 margin-bottom: 8px;
 position: relative;
 box-sizing: border-box;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('image', `
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&::after', `
 content: "";
 position: absolute;
 border-radius: inherit;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 box-shadow: inset 0 0 2px 0 rgba(0, 0, 0, .24);
 pointer-events: none;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-handle', `
 z-index: 1;
 box-shadow: 0 0 2px 0 rgba(0, 0, 0, .45);
 position: absolute;
 background-color: white;
 overflow: hidden;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('fill', `
 box-sizing: border-box;
 border: 2px solid white;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-pallete', `
 height: 180px;
 position: relative;
 margin-bottom: 8px;
 cursor: crosshair;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('layer', `
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cM)('shadowed', `
 box-shadow: inset 0 0 2px 0 rgba(0, 0, 0, .24);
 `)])]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-preview', `
 display: flex;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('sliders', `
 flex: 1 0 auto;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('preview', `
 position: relative;
 height: 30px;
 width: 30px;
 margin: 0 0 8px 6px;
 border-radius: 50%;
 box-shadow: rgba(0, 0, 0, .15) 0px 0px 0px 1px inset;
 overflow: hidden;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('fill', `
 display: block;
 width: 30px;
 height: 30px;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('input', `
 position: absolute;
 top: 0;
 left: 0;
 width: 30px;
 height: 30px;
 opacity: 0;
 z-index: 1;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-input', `
 display: flex;
 align-items: center;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('input', `
 flex-grow: 1;
 flex-basis: 0;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('mode', `
 width: 72px;
 text-align: center;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-control', `
 padding: 12px;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-action', `
 display: flex;
 margin-top: -4px;
 border-top: 1px solid var(--n-divider-color);
 padding: 8px 12px;
 justify-content: flex-end;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('button', 'margin-left: 8px;')]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-trigger', `
 border: var(--n-border);
 height: 100%;
 box-sizing: border-box;
 border-radius: var(--n-border-radius);
 transition: border-color .3s var(--n-bezier);
 cursor: pointer;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('value', `
 white-space: nowrap;
 position: relative;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('fill', `
 border-radius: var(--n-border-radius);
 position: absolute;
 display: flex;
 align-items: center;
 justify-content: center;
 left: 4px;
 right: 4px;
 top: 4px;
 bottom: 4px;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cM)('disabled', 'cursor: not-allowed'), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-checkboard', `
 border-radius: var(--n-border-radius);
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&::after', `
 --n-block-size: calc((var(--n-height) - 8px) / 3);
 background-size: calc(var(--n-block-size) * 2) calc(var(--n-block-size) * 2);
 background-position: 0 0, 0 var(--n-block-size), var(--n-block-size) calc(-1 * var(--n-block-size)), calc(-1 * var(--n-block-size)) 0px; 
 `)])]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-swatches', `
 display: grid;
 grid-gap: 8px;
 flex-wrap: wrap;
 position: relative;
 grid-template-columns: repeat(auto-fill, 18px);
 margin-top: 10px;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('color-picker-swatch', `
 width: 18px;
 height: 18px;
 background-image: linear-gradient(45deg, #DDD 25%, #0000 25%), linear-gradient(-45deg, #DDD 25%, #0000 25%), linear-gradient(45deg, #0000 75%, #DDD 75%), linear-gradient(-45deg, #0000 75%, #DDD 75%);
 background-size: 8px 8px;
 background-position: 0px 0, 0px 4px, 4px -4px, -4px 0px;
 background-repeat: repeat;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('fill', `
 position: relative;
 width: 100%;
 height: 100%;
 border-radius: 3px;
 box-shadow: rgba(0, 0, 0, .15) 0px 0px 0px 1px inset;
 cursor: pointer;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:focus', `
 outline: none;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('fill', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&::after', `
 position: absolute;
 top: 0;
 right: 0;
 bottom: 0;
 left: 0;
 background: inherit;
 filter: blur(2px);
 content: "";
 `)])])])])]));

/***/ }),

/***/ "./node_modules/naive-ui/es/color-picker/src/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/naive-ui/es/color-picker/src/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   convertColor: () => (/* binding */ convertColor),
/* harmony export */   deriveDefaultValue: () => (/* binding */ deriveDefaultValue),
/* harmony export */   floor: () => (/* binding */ floor),
/* harmony export */   getModeFromValue: () => (/* binding */ getModeFromValue),
/* harmony export */   normalizeAlpha: () => (/* binding */ normalizeAlpha),
/* harmony export */   normalizeHue: () => (/* binding */ normalizeHue)
/* harmony export */ });
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/index.js");
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/convert.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../_utils */ "./node_modules/naive-ui/es/_utils/naive/warn.js");


function deriveDefaultValue(modes, showAlpha) {
    const mode = modes[0];
    switch (mode) {
        case 'hex':
            return showAlpha ? '#000000FF' : '#000000';
        case 'rgb':
            return showAlpha ? 'rgba(0, 0, 0, 1)' : 'rgb(0, 0, 0)';
        case 'hsl':
            return showAlpha ? 'hsla(0, 0%, 0%, 1)' : 'hsl(0, 0%, 0%)';
        case 'hsv':
            return showAlpha ? 'hsva(0, 0%, 0%, 1)' : 'hsv(0, 0%, 0%)';
    }
    if (true)
        (0,_utils__WEBPACK_IMPORTED_MODULE_0__.warn)('color-picker', 'props.modes is invalid.');
    // in case of invalid modes
    return '#000000';
}
function getModeFromValue(color) {
    if (color === null)
        return null;
    if (/^ *#/.test(color))
        return 'hex';
    if (color.includes('rgb'))
        return 'rgb';
    if (color.includes('hsl'))
        return 'hsl';
    if (color.includes('hsv'))
        return 'hsv';
    return null;
}
function floor(color) {
    return color.map((channel) => Math.floor(channel));
}
function normalizeHue(hue) {
    hue = Math.round(hue);
    return hue >= 360 ? 359 : hue < 0 ? 0 : hue;
}
function normalizeAlpha(alpha) {
    alpha = Math.round(alpha * 100) / 100;
    return alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;
}
const convert = {
    rgb: {
        hex(value) {
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHexaString)((0,seemly__WEBPACK_IMPORTED_MODULE_1__.rgba)(value));
        },
        hsl(value) {
            const [r, g, b, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.rgba)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHslaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.rgb2hsl)(r, g, b), a]);
        },
        hsv(value) {
            const [r, g, b, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.rgba)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHsvaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.rgb2hsv)(r, g, b), a]);
        }
    },
    hex: {
        rgb(value) {
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toRgbaString)((0,seemly__WEBPACK_IMPORTED_MODULE_1__.rgba)(value));
        },
        hsl(value) {
            const [r, g, b, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.rgba)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHslaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.rgb2hsl)(r, g, b), a]);
        },
        hsv(value) {
            const [r, g, b, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.rgba)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHsvaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.rgb2hsv)(r, g, b), a]);
        }
    },
    hsl: {
        hex(value) {
            const [h, s, l, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.hsla)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHexaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.hsl2rgb)(h, s, l), a]);
        },
        rgb(value) {
            const [h, s, l, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.hsla)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toRgbaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.hsl2rgb)(h, s, l), a]);
        },
        hsv(value) {
            const [h, s, l, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.hsla)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHsvaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.hsl2hsv)(h, s, l), a]);
        }
    },
    hsv: {
        hex(value) {
            const [h, s, v, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.hsva)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHexaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.hsv2rgb)(h, s, v), a]);
        },
        rgb(value) {
            const [h, s, v, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.hsva)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toRgbaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.hsv2rgb)(h, s, v), a]);
        },
        hsl(value) {
            const [h, s, v, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_1__.hsva)(value);
            return (0,seemly__WEBPACK_IMPORTED_MODULE_1__.toHslaString)([...(0,seemly__WEBPACK_IMPORTED_MODULE_2__.hsv2hsl)(h, s, v), a]);
        }
    }
};
// implementation
function convertColor(value, mode, originalMode) {
    originalMode = originalMode || getModeFromValue(value);
    if (!originalMode)
        return null;
    if (originalMode === mode)
        return value;
    const conversions = convert[originalMode];
    return conversions[mode](value);
}


/***/ }),

/***/ "./node_modules/naive-ui/es/input/src/InputGroup.js":
/*!**********************************************************!*\
  !*** ./node_modules/naive-ui/es/input/src/InputGroup.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   inputGroupProps: () => (/* binding */ inputGroupProps)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../_mixins */ "./node_modules/naive-ui/es/_mixins/use-config.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_mixins */ "./node_modules/naive-ui/es/_mixins/use-style.js");
/* harmony import */ var _styles_input_group_cssr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./styles/input-group.cssr */ "./node_modules/naive-ui/es/input/src/styles/input-group.cssr.js");



const inputGroupProps = {};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
    name: 'InputGroup',
    props: inputGroupProps,
    setup(props) {
        const { mergedClsPrefixRef } = (0,_mixins__WEBPACK_IMPORTED_MODULE_1__["default"])(props);
        (0,_mixins__WEBPACK_IMPORTED_MODULE_2__["default"])('-input-group', _styles_input_group_cssr__WEBPACK_IMPORTED_MODULE_3__["default"], mergedClsPrefixRef);
        return {
            mergedClsPrefix: mergedClsPrefixRef
        };
    },
    render() {
        const { mergedClsPrefix } = this;
        return (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${mergedClsPrefix}-input-group` }, this.$slots);
    }
}));


/***/ }),

/***/ "./node_modules/naive-ui/es/input/src/styles/input-group.cssr.js":
/*!***********************************************************************!*\
  !*** ./node_modules/naive-ui/es/input/src/styles/input-group.cssr.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_cssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../_utils/cssr */ "./node_modules/naive-ui/es/_utils/cssr/index.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('input-group', `
 display: inline-flex;
 width: 100%;
 flex-wrap: nowrap;
 vertical-align: bottom;
`, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('>', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('input', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:not(:last-child)', `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:not(:first-child)', `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 margin-left: -1px!important;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('button', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:not(:last-child)', `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('state-border, border', `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `)]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:not(:first-child)', `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('state-border, border', `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `)])]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('*', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:not(:last-child)', `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('>', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('input', `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('base-selection', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('base-selection-label', `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('base-selection-tags', `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('box-shadow, border, state-border', `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `)])])]), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('&:not(:first-child)', `
 margin-left: -1px!important;
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `, [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.c)('>', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('input', `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('base-selection', [(0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('base-selection-label', `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cB)('base-selection-tags', `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `), (0,_utils_cssr__WEBPACK_IMPORTED_MODULE_0__.cE)('box-shadow, border, state-border', `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `)])])])])])]));

/***/ }),

/***/ "./node_modules/seemly/es/css/index.js":
/*!*********************************************!*\
  !*** ./node_modules/seemly/es/css/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   depx: () => (/* binding */ depx),
/* harmony export */   getGap: () => (/* binding */ getGap),
/* harmony export */   getMargin: () => (/* binding */ getMargin),
/* harmony export */   getPadding: () => (/* binding */ getMargin),
/* harmony export */   parseResponsiveProp: () => (/* reexport safe */ _responsive__WEBPACK_IMPORTED_MODULE_0__.parseResponsiveProp),
/* harmony export */   parseResponsivePropValue: () => (/* reexport safe */ _responsive__WEBPACK_IMPORTED_MODULE_0__.parseResponsivePropValue),
/* harmony export */   pxfy: () => (/* binding */ pxfy)
/* harmony export */ });
/* harmony import */ var _responsive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./responsive */ "./node_modules/seemly/es/css/responsive.js");
function depx(value) {
    if (typeof value === 'string') {
        if (value.endsWith('px')) {
            return Number(value.slice(0, value.length - 2));
        }
        return Number(value);
    }
    return value;
}
function pxfy(value) {
    if (value === undefined || value === null)
        return undefined;
    if (typeof value === 'number')
        return `${value}px`;
    if (value.endsWith('px'))
        return value;
    return `${value}px`;
}

function getMargin(value, position) {
    const parts = value.trim().split(/\s+/g);
    const margin = {
        top: parts[0]
    };
    switch (parts.length) {
        case 1:
            margin.right = parts[0];
            margin.bottom = parts[0];
            margin.left = parts[0];
            break;
        case 2:
            margin.right = parts[1];
            margin.left = parts[1];
            margin.bottom = parts[0];
            break;
        case 3:
            margin.right = parts[1];
            margin.bottom = parts[2];
            margin.left = parts[1];
            break;
        case 4:
            margin.right = parts[1];
            margin.bottom = parts[2];
            margin.left = parts[3];
            break;
        default:
            throw new Error('[seemly/getMargin]:' + value + ' is not a valid value.');
    }
    if (position === undefined)
        return margin;
    return margin[position];
}
function getGap(value, orient) {
    const [rowGap, colGap] = value.split(' ');
    if (!orient)
        return {
            row: rowGap,
            col: colGap || rowGap
        };
    return orient === 'row' ? rowGap : colGap;
}




/***/ }),

/***/ "./node_modules/seemly/es/css/responsive.js":
/*!**************************************************!*\
  !*** ./node_modules/seemly/es/css/responsive.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseResponsiveProp: () => (/* binding */ parseResponsiveProp),
/* harmony export */   parseResponsivePropValue: () => (/* binding */ parseResponsivePropValue)
/* harmony export */ });
function parseResponsiveProp(reponsiveProp) {
    if (typeof reponsiveProp === "number") {
        return {
            '': reponsiveProp.toString()
        };
    }
    const params = {};
    reponsiveProp.split(/ +/).forEach((pairLiteral) => {
        if (pairLiteral === '')
            return;
        const [prefix, value] = pairLiteral.split(':');
        if (value === undefined) {
            params[''] = prefix;
        }
        else {
            params[prefix] = value;
        }
    });
    return params;
}
function parseResponsivePropValue(reponsiveProp, activeKeyOrSize) {
    var _a;
    if (reponsiveProp === undefined || reponsiveProp === null)
        return undefined;
    const classObj = parseResponsiveProp(reponsiveProp);
    if (activeKeyOrSize === undefined)
        return classObj[''];
    if (typeof activeKeyOrSize === 'string') {
        return (_a = classObj[activeKeyOrSize]) !== null && _a !== void 0 ? _a : classObj[''];
    }
    else if (Array.isArray(activeKeyOrSize)) {
        for (let i = activeKeyOrSize.length - 1; i >= 0; --i) {
            const key = activeKeyOrSize[i];
            if (key in classObj)
                return classObj[key];
        }
        return classObj[''];
    }
    else {
        // Here we suppose all the keys are number formatted
        let activeValue = undefined;
        let activeKey = -1;
        Object.keys(classObj).forEach((key) => {
            const keyAsNum = Number(key);
            if (!Number.isNaN(keyAsNum) &&
                activeKeyOrSize >= keyAsNum &&
                keyAsNum >= activeKey) {
                activeKey = keyAsNum;
                activeValue = classObj[key];
            }
        });
        return activeValue;
    }
}



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,